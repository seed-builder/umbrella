<?php

namespace App\Models;

use App\Events\ModelCreatedEvent;
use App\Events\ModelDeletedEvent;
use App\Events\ModelUpdatedEvent;
use Illuminate\Database\Eloquent\Model;
use App\Models\BaseModel;

/**
 * model description
 * Class Equipment
 * @package  App\Models
 *
 * @author  xrs
 * @SWG\Model(id="Equipment")
 * @SWG\Property(name="capacity", type="integer", description="容量（伞数量）")
 * @SWG\Property(name="created_at", type="string", description="")
 * @SWG\Property(name="creator_id", type="integer", description="创建用户id")
 * @SWG\Property(name="deleted_at", type="string", description="")
 * @SWG\Property(name="have", type="integer", description="当前还有数（伞数量）")
 * @SWG\Property(name="id", type="integer", description="")
 * @SWG\Property(name="ip", type="string", description="ip")
 * @SWG\Property(name="modifier_id", type="integer", description="修改用户id")
 * @SWG\Property(name="site_id", type="integer", description="sites id")
 * @SWG\Property(name="sn", type="string", description="设备编号")
 * @SWG\Property(name="status", type="integer", description="状态（1-未启用, 2-启用, 3-在线, 4-离线, 5-系统故障）")
 * @SWG\Property(name="type", type="integer", description="设备类型 1-伞机设备 2-手持设备")
 * @SWG\Property(name="updated_at", type="string", description="")
 * @SWG\Property(name="server_ip", type="string", description="服务端ip")
 */
class Equipment extends BaseModel
{
	/**
	 * 状态 1-未启用
	 */
	const STATUS_INIT = 1;
	/**
	 * 状态 2-启用
	 */
	const STATUS_NORMAL = 2;
	/**
	 * 状态 3-在线
	 */
	const STATUS_ONLINE = 3;
	/**
	 * 状态 4-离线
	 */
	const STATUS_OFFLINE = 4;
	/**
	 * 状态 5-系统故障
	 */
	const STATUS_BUG = 5;

	/**
	 * 设备类型 1-伞机设备
	 */
	const TYPE_DESK=1;
	/**
	 * 设备类型 2-手持设备
	 */
	const TYPE_HAND=2;

    //
    protected $table = 'equipments';
    protected $guarded = ['id'];

    public $validateRules = [
        'capacity' => 'required',
        'ip' => 'required',
        'sn' => 'required',
    ];

    public $validateMessages = [
        'capacity.required' => "伞容量不能为空",
        'ip.required' => "ip不能为空",
        'sn.required' => "设备号不能为空",
    ];

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        static::created(function($model){
            for ($i = 1; $i <= $model->channels; $i ++) {
                EquipmentChannel::create([
                    'equipment_id' => $model->id,
                    'num' => $i
                ]);
            }
        });
        static::updated(function ($model){
            Umbrella::where('equipment_id',$model->id)->update([
                'site_id' => $model->site_id
            ]);
        });
    }

//    protected static function boot()
//    {
//        parent::boot(); // TODO: Change the autogenerated stub
//        static::created(function ($model) {
//            event(new ModelCreatedEvent($model));
//
//            $site = Site::find($model->site_id);
//            $flag = $model->type == 1 ? 'E' : 'M';
//
//            $model->sn = $flag.$site->code.str_pad($model->id,5,"0",STR_PAD_LEFT);
//            $model->save();
//        });
//        static::deleted(function ($model) {
//            event(new ModelDeletedEvent($model));
//        });
//        static::updated(function ($model) {
//            event(new ModelUpdatedEvent($model));
//
//            $site = Site::find($model->site_id);
//            $flag = $model->type == 1 ? 'E' : 'M';
//
//            $model->sn = $flag.$site->code.str_pad($model->id,5,"0",STR_PAD_LEFT);
//            $model->save();
//        });
//    }

    public function site()
    {
        return $this->hasOne(Site::class, 'id', 'site_id');
    }

    public function equipment_channels () {
        return $this->hasMany(EquipmentChannel::class, 'equipment_id', 'id');
    }

    public function status()
    {
        switch ($this->status) {
            case Equipment::STATUS_INIT: {
                return '未启用';
            }
            case Equipment::STATUS_NORMAL: {
                return '启用';
            }
            case Equipment::STATUS_ONLINE: {
                return '在线';
            }
            case Equipment::STATUS_OFFLINE: {
                return '离线';
            }
            case Equipment::STATUS_BUG: {
                return '系统故障';
            }
            default : {
                return '未启用';
            }
        }
    }

    public function type()
    {
        switch ($this->type) {
            case Equipment::TYPE_DESK: {
                return '伞机设备';
            }
            case Equipment::TYPE_HAND: {
                return '手持设备';
            }
            default : {
                return '伞机设备';
            }
        }
    }
}
