<?php
namespace App\Http\Controllers\Admin;

use App\Models\Equipment;
use App\Models\Site;
use Illuminate\Http\Request;
use App\Http\Controllers\Admin\BaseController;
use App\Models\Umbrella;

class UmbrellaController extends BaseController
{
    public function newEntity(array $attributes = [])
    {
        // TODO: Implement newEntity() method.
        return new Umbrella($attributes);
    }

    /**
     * Display a listing of the resource.
     *
     * @return  \Illuminate\Http\Response
     */
    public function index()
    {
        $equipments = Equipment::all();
        $sites = Site::all();
        return view('admin.umbrella.index', compact('equipments', 'sites'));
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return  \Illuminate\Http\Response
     */
    public function create()
    {
        $equipments = Equipment::all();
        $sites = Site::all();
        return view('admin.umbrella.create', compact('equipments', 'sites'));
    }

    public function store(Request $request, $only = [], $extraFields = [], $redirect_url = null)
    {
        $data = $request->all();
        $extraFields = [
            'sn' => 'S' . date('YmdHis') . random_int(100, 999)
        ];
        if (empty($data['name']))
            $extraFields['name'] = '共享伞' . $extraFields['sn'];

        return parent::store($request, $only, $extraFields, $redirect_url); // TODO: Change the autogenerated stub
    }

    public function entityQuery()
    {
        $query = Umbrella::query();
        $query->select(
            'umbrellas.id as id',
            'umbrellas.sn',
            'umbrellas.equipment_id',
            'umbrellas.site_id',
            'umbrellas.status',
            'umbrellas.name',
            'umbrellas.color',
            'umbrellas.logo',
            'umbrellas.created_at',
            'equipments.sn as equipment_sn',
            'sites.name as site_name',
            'sites.name as site_address'
        );

        $query->leftJoin('equipments', function ($join) {
            $join->on('equipments.id', '=', 'umbrellas.equipment_id');
        });

        $query->leftJoin('sites', function ($join) {
            $join->on('sites.id', '=', 'umbrellas.site_id');
        });

        return $query;
    }

    /**
     * Display the specified resource.
     *
     * @param    int $id
     * @return  \Illuminate\Http\Response
     */
    public function edit($id)
    {
        $entity = Umbrella::find($id);
        return view('admin.umbrella.edit', ['entity' => $entity]);
    }

    /**
     * Display the specified resource.
     *
     * @param    int $id
     * @return  \Illuminate\Http\Response
     */
    public function show($id)
    {
        $entity = Umbrella::find($id);
        return view('admin.umbrella.show', ['entity' => $entity]);
    }

    /**
     * @param  Request $request
     * @param  array $searchCols
     * @param  array $with
     * @param  null $conditionCall
     * @param  bool $all_columns
     * @return  \Illuminate\Http\JsonResponse
     */
    public function pagination(Request $request, $searchCols = [], $with = [], $conditionCall = null, $dataHandleCall = null, $all_columns = false)
    {
        $searchCols = ["color", "logo", "name", "sn"];
        return parent::pagination($request, $searchCols, $with, $conditionCall, $dataHandleCall, true);
    }

}
