<?php
namespace App\Http\Controllers\Admin;

use App\Models\Equipment;
use App\Models\Site;
use Illuminate\Http\Request;
use App\Http\Controllers\Admin\BaseController;
use App\Models\EquipmentMaintain;

class EquipmentMaintainController extends BaseController
{
    public function newEntity(array $attributes = [])
    {
        // TODO: Implement newEntity() method.
        return new EquipmentMaintain($attributes);
    }

    /**
     * Display a listing of the resource.
     *
     * @return  \Illuminate\Http\Response
     */
    public function index()
    {
        //
        return view('admin.equipment-maintain.index');
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return  \Illuminate\Http\Response
     */
    public function create()
    {
        $equipments = Equipment::all();
        return view('admin.equipment-maintain.create', compact('equipments'));
    }

    /**
     * Display the specified resource.
     *
     * @param    int $id
     * @return  \Illuminate\Http\Response
     */
    public function edit($id)
    {
        $entity = EquipmentMaintain::find($id);
        $equipments = Equipment::all();
        return view('admin.equipment-maintain.edit', ['entity' => $entity, 'equipments' => $equipments]);
    }

    /**
     * Display the specified resource.
     *
     * @param    int $id
     * @return  \Illuminate\Http\Response
     */
    public function show($id)
    {
        $entity = EquipmentMaintain::find($id);
        return view('admin.equipment-maintain.show', ['entity' => $entity]);
    }

    /**
     * @param  Request $request
     * @param  array $searchCols
     * @param  array $with
     * @param  null $conditionCall
     * @param  bool $all_columns
     * @return  \Illuminate\Http\JsonResponse
     */
    public function pagination(Request $request, $searchCols = [], $with = [], $conditionCall = null, $dataHandleCall = null, $all_columns = false)
    {
        $searchCols = ["engineer", "maintain_content"];
        return parent::pagination($request, $searchCols, $with, $conditionCall, $dataHandleCall, true);
    }

    public function entityQuery()
    {
        $query = EquipmentMaintain::query();

        $query->select(
            'equipment_maintains.id as id',
            'equipment_maintains.equipment_id',
            'equipment_maintains.site_id',
            'equipment_maintains.engineer',
            'equipment_maintains.maintain_content',
            'equipment_maintains.created_at',
            'equipments.sn as equipments_sn',
            'sites.name as site_name'
        );
        $query->leftJoin('equipments', function ($join) {
            $join->on('equipments.id', '=', 'equipment_maintains.equipment_id');
        });

        $query->leftJoin('sites', function ($join) {
            $join->on('sites.id', '=', 'equipment_maintains.site_id');
        });
        return $query; // TODO: Change the autogenerated stub
    }

    public function store(Request $request, $only = [], $extraFields = [], $redirect_url = null)
    {
        $ep_id = $request->input('equipment_id', 0);
        $equipment = Equipment::find($ep_id);

        $extraFields = [
            'site_id' => $equipment->site_id
        ];
        return parent::store($request, $only, $extraFields, $redirect_url); // TODO: Change the autogenerated stub
    }

    public function update(Request $request, $id, $only = [], $extraFields = [], $redirect_url = null)
    {
        $ep_id = $request->input('equipment_id', 0);
        $equipment = Equipment::find($ep_id);

        $extraFields = [
            'site_id' => $equipment->site_id
        ];
        return parent::update($request, $id, $only, $extraFields, $redirect_url); // TODO: Change the autogenerated stub
    }


}
